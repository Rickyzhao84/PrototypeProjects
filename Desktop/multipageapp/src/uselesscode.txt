// submitHandler = (e) => {
  //   e.preventDefault();
    
  //   axios
  //     .get("https://idigest.gtinternational.org/api/lesson/GodsLove", {
  //       headers: {
  //         "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjY1NywibG9naW5JZCI6InBuZXVtb25pY2NvbWFAZ21haWwuY29tIiwiaWF0IjoxNjAzOTk4NjQwLCJleHAiOjE2MzU1MzQ2NDB9.rRXy4J5D5Rw9K2lTDTjd4VZ3hLEaBEU1BPNNND1HOys",
  //         "Content-type": "application/json",
  //       },
  //     })
  //     .then((response) => {
  //       console.log(response);
  //       console.log(response.data);
  //       console.log(response.data.title);
  //       const GodsLove = response.data;
        
        
        
        
  //       for (let i = 0; i < response.data.sessions.length; i++) {
          
  //           this.setState(prevState=> ({
  //             titles: [...prevState.titles, response.data.sessions[i].title],
  //             lesson: [...prevState.lesson, response.data.sessions[i].lesson],
  //           }))
           
            
          
  //         console.log(response.data.sessions[i])
          
          
  //       }
  //       this.setState({GodsLove});
  //       //console.log(response.data.sessions[0]);
  //       console.log(response.data.sessions[0]);
  //       console.log(this.state.titles);
  //       console.log(response.data.sessions[0].lesson);
        
  //     })
      
  //     .catch((error) => {
  //       console.log(error);
  //     });


  //     axios
  //     .get("https://idigest.gtinternational.org/api/lesson/FollowMe", {
  //       headers: {
  //         "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjY1NywibG9naW5JZCI6InBuZXVtb25pY2NvbWFAZ21haWwuY29tIiwiaWF0IjoxNjAzOTk4NjQwLCJleHAiOjE2MzU1MzQ2NDB9.rRXy4J5D5Rw9K2lTDTjd4VZ3hLEaBEU1BPNNND1HOys",
  //         "Content-type": "application/json",
  //       },
  //     })
  //     .then((response) => {
  //       console.log(response);
  //       console.log(response.data);
  //       console.log(response.data.title);
  //       const FollowMe = response.data;
        
        
        
        
  //       for (let i = 0; i < response.data.sessions.length; i++) {
          
  //           this.setState(prevState=> ({
  //             books1: [...prevState.books1, response.data.sessions[i].title],
  //             lesson: [...prevState.lesson, response.data.sessions[i].lesson],
  //           }))
           
            
          
  //         console.log(response.data.sessions[i])
          
          
  //       }
  //       this.setState({FollowMe});
  //       //console.log(response.data.sessions[0]);
  //       console.log(response.data.sessions[0]);
  //       console.log(this.state.titles);
  //       console.log(response.data.sessions[0].lesson);
        
  //     })
      
  //     .catch((error) => {
  //       console.log(error);
  //     });


  // };
  {/* <form onSubmit={this.submitHandler}>
          
          <h1>
            {this.state.persons.title}
          </h1>
          <h3>{this.state.persons.description}</h3>
          <button className="buttonsw">Submit</button>
          
        </form> */}

        
/*
    constructor(props) {
        super(props);
    
        this.state = {
          item: [],
          isLoaded: false
        };
      }
    
      componentDidMount() {
        fetch('https://jsonplaceholder.typicode.com/users')
          .then(res => res.json())
          .then(json => {
            this.setState({
              isLoaded: true,
              items: json,
            })
          });
      }
    /*
      submitHandler = (e) => {
        e.preventDefault();
        console.log(this.state);
        axios
          .get("https://idigest.gtinternational.org/api/lesson/parenting?/content/*")
          .then((response) => {
            console.log(response);
          })
          .catch((error) => {
            console.log(error);
          });
      };
    
    *//*
      render() {
        var { isLoaded, items } = this.state;
        if(!isLoaded) {
          return <div>Loading!!</div>;
        } else {
        return (
          <div>
            <ul>
              {items.map(item => (
                <li key={item.id}>
                  Name: {item.name} | Email: {item.email}
                </li>
              ))};
            </ul>
          </div>
        );
      }
    }
    }
    
export default GetContent;
*/

    // axios
    //   .get("https://idigest.gtinternational.org/api/lesson/GodsLove", {
    //     headers: {
    //       "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjY1NywibG9naW5JZCI6InBuZXVtb25pY2NvbWFAZ21haWwuY29tIiwiaWF0IjoxNjAzOTk4NjQwLCJleHAiOjE2MzU1MzQ2NDB9.rRXy4J5D5Rw9K2lTDTjd4VZ3hLEaBEU1BPNNND1HOys",
    //       "Content-type": "application/json",
    //     },
    //   })
    //   .then((response) => {
    //     console.log(response);
    //     console.log(response.data);
    //     console.log(response.data.title);
    //     const GodsLove = response.data;
        
        
        
        
    //     for (let i = 0; i < response.data.sessions.length; i++) {
          
    //         this.setState(prevState=> ({
    //           titles: [...prevState.titles, response.data.sessions[i].title],
    //           lesson: [...prevState.lesson, response.data.sessions[i].lesson],
    //         }))
           
            
          
    //       console.log(response.data.sessions[i])
          
          
    //     }
    //     this.setState({GodsLove});
    //     //console.log(response.data.sessions[0]);
    //     console.log(response.data.sessions[0]);
    //     console.log(this.state.titles);
    //     console.log(response.data.sessions[0].lesson);
        
    //   })
      
    //   .catch((error) => {
    //     console.log(error);
    //   });



    {/* <h4>
            {this.state.GodsLove.title}
          </h4>
          
          <h4>
            {this.state.GodsLove.description}
            
          </h4> */}
          {/* <h5>{this.state.name.map(
              item => (
                <li key={item}>{item}</li>
              )
            )}</h5> */}
          
        
          {/* <h5 class="left">{this.state.titles.map(item => (
            
            <a href="google.com"><li key = {item}>{item}</li></a>
          
            )
          )}</h5> */}
          
          {/* <h5 class = "left">{this.state.name.keys((array) => <li>{array}</li>)}</h5> */}